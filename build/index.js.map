{"version":3,"file":"index.js","mappings":"+sEAAA,IAAQA,EAAsBC,GAAGC,OAAzBF,kBACAG,GAAsBF,GAAGG,aAAeH,GAAGI,QAA3CF,kBACRG,EAAiDL,GAAGM,WAA5CC,EAASF,EAATE,UACRC,GAD8BH,EAAXI,YAAyBJ,EAAZK,aACAV,GAAGW,SAA3BC,EAASJ,EAATI,UAAWC,EAAQL,EAARK,SACXC,EAAad,GAAbc,SAEU,oBAAPd,IAAsBA,GAAGC,QAAUD,GAAGG,aAAeH,GAAGM,YAAcN,GAAGW,SAAiC,oBAAfI,YACpGC,OAAOC,KAAKF,YAAYG,SAAQ,SAACC,GAC/B,IAAMC,EAAQL,WAAWI,GACnBE,EAAY,GAAHC,OAAMF,EAAMC,UAAS,KAAAC,OAAIF,EAAMG,MAC9CxB,EAAkBsB,EAAW,CAC3BG,MAAOJ,EAAMI,MACbC,KAAML,EAAMK,KACZC,SAAUN,EAAMM,SAChBC,WAAUC,EAAAA,EAAA,GACLR,EAAMO,YAAU,IACnBE,QAAS,CAAEC,KAAM,UAAWC,SAAS,KAEvCC,KAAM,SAAUC,GACd,IAAQN,EAAwCM,EAAxCN,WAAYO,EAA4BD,EAA5BC,cAGdC,GAH0CF,EAAbG,SAGbpB,OAAOC,KAAKG,EAAMO,YAAYU,QAAO,SAACC,EAAKC,GAC/D,IAAMC,EAAYpB,EAAMO,WAAWY,GAEnC,OADAD,EAAIC,GAAWZ,EAAWY,IAAYC,EAAS,SAAY,GACpDF,CACT,GAAG,CAAC,IAEsCG,EAAAC,EAAZ7B,EAAS,IAAG,GAAnC8B,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GACmCI,EAAAH,EAAvB7B,EAASsB,GAAc,GAAtDW,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GACoBG,EAAAN,EAAZ7B,EAAS,CAAC,GAAE,GAA/CoC,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,EAAoB,SAACC,EAAYC,GACrCN,EAAcnB,EAAAA,EAAC,CAAC,EACXkB,GAAW,GAAAQ,EAAA,GACbF,EAAaC,KAIhBE,EAAcH,EAAYC,EAC5B,EAEME,EAAgB,SAACH,EAAYI,GAC7BpC,EAAMO,WAAWyB,GAAYK,WAAaD,GAC5CN,GAAiB,SAACQ,GAAU,OAAA9B,EAAAA,EAAA,GACvB8B,GAAU,GAAAJ,EAAA,GACZF,EAAU,GAAA9B,OAAMF,EAAMO,WAAWyB,GAAYO,OAASP,EAAU,sBAEnElB,EAAc,CAAEL,SAAS,MAGzBqB,GAAiB,SAACQ,GAEhB,OADqCA,EAA5BN,G,kXAAuBQ,CAAKF,EAAU,CAAtCN,GAAUS,IAAAC,GAErB,IACA5B,EAAc,CAAEL,SAAS,IAE7B,EAmCA,GAjCAjB,GAAU,WAER,IAAMmD,EAAc,IAAIC,gBAAgBlB,GAAamB,WACrDnD,EAAS,CAAEoD,KAAM,GAAF5C,OAAKF,EAAMC,UAAS,KAAAC,OAAIF,EAAMG,KAAI,aAAAD,OAAYyC,KAAiBI,MAAK,SAACC,GAClFxB,EAAWwB,GACX,IACMC,EAAQ,IAAIC,YAAY,8BAA+B,CAAEC,OADpD,CAAEC,SAAUJ,EAAMhD,MAAOA,KAEpCqD,SAASC,cAAcL,EACzB,GACF,GAAG,CAACM,KAAKC,UAAU9B,KAoBnBlC,GAAU,WAjBqB,IACzBiE,KAAY,EAChB7D,OAAO8D,QAAQ1D,EAAMO,YAAYT,SAAQ,SAAA6D,GAAiB,IAAAC,EAAAtC,EAAAqC,EAAA,GAAf5D,EAAG6D,EAAA,GAAEC,EAAID,EAAA,GAC9CC,EAAKxB,WAAaX,EAAY3B,KAChC+B,GAAiB,SAACQ,GAAU,OAAA9B,EAAAA,EAAA,GACvB8B,GAAU,GAAAJ,EAAA,GACZnC,EAAG,GAAAG,OAAM2D,EAAKtB,OAASxC,EAAG,sBAE7B0D,GAAY,EAEhB,IAEA3C,EAAc,CAAEL,SAAUgD,GAO5B,GAAG,CAAC/B,IAE4B,WAA5BoC,EAAO9D,EAAMO,aAAgD,OAArBP,EAAMO,WAAqB,CACrE,IAAIwD,EAAW,GA0Ef,OAzEAnE,OAAO8D,QAAQ1D,EAAMO,YAAYT,SAAQ,SAAAkE,GAAiB,IAAAC,EAAA3C,EAAA0C,EAAA,GAAfjE,EAAGkE,EAAA,GAAEJ,EAAII,EAAA,GAClD,OAAQJ,EAAKK,aACX,IAAK,SACHH,EAASI,KAAKvF,GAAGW,QAAQ6E,cAAcxF,GAAGM,WAAWmF,cAAe,CAClE9B,MAAOsB,EAAKtB,MACZH,MAAOvB,EAAMN,WAAWR,GACxBuE,QAAST,EAAKS,QACdC,SAAU,SAAUnC,GAClBtB,EAAaoB,EAAC,CAAC,EAAEnC,EAAMqC,IACvBL,EAAkBhC,EAAKqC,EACzB,KAEF,MACF,IAAK,QACH2B,EAASI,KAAKvF,GAAGW,QAAQ6E,cAAcxF,GAAGM,WAAWsF,YAAa,CAChEjC,MAAOsB,EAAKtB,MACZkC,MAAO5D,EAAMN,WAAWR,GACxB2E,iBAAkB,SAAUtC,GAC1B,IAAMuC,EAAavC,EAAMwC,IACzB9D,EAAaoB,EAAC,CAAC,EAAEnC,EAAM4E,IACvB5C,EAAkBhC,EAAK4E,EACzB,KAEF,MACF,IAAK,WACHZ,EAASI,KAAKvF,GAAGW,QAAQ6E,cAAcxF,GAAGM,WAAW2F,gBAAiB,CACpEtC,MAAOsB,EAAKtB,MACZH,MAAOvB,EAAMN,WAAWR,GACxBwE,SAAU,SAAUnC,GAClBtB,EAAaoB,EAAC,CAAC,EAAEnC,EAAMqC,IACvBL,EAAkBhC,EAAKqC,EACzB,KAEF,MACF,IAAK,SACH2B,EAASI,KAAKvF,GAAGW,QAAQ6E,cAAcxF,GAAGM,WAAWI,aAAc,CACjEiD,MAAOsB,EAAKtB,MACZH,MAAOvB,EAAMN,WAAWR,GACxBwE,SAAU,SAAUnC,GAClBtB,EAAaoB,EAAC,CAAC,EAAEnC,EAAMqC,IACvBL,EAAkBhC,EAAKqC,EACzB,EACA0C,IAAKjB,EAAKtD,WAAWuE,KAAO,EAC5BC,IAAKlB,EAAKtD,WAAWwE,KAAO,IAC5BC,KAAMnB,EAAKtD,WAAWyE,MAAQ,KAEhC,MACF,IAAK,SACHjB,EAASI,KAAKvF,GAAGW,QAAQ6E,cAAcxF,GAAGM,WAAWG,YAAa,CAChEkD,MAAOsB,EAAKtB,MACZH,MAAOvB,EAAMN,WAAWR,GACxBwE,SAAU,SAAUnC,GAClBtB,EAAaoB,EAAC,CAAC,EAAEnC,EAAMqC,IACvBL,EAAkBhC,EAAKqC,EACzB,KAEF,MACF,IAAK,UACH2B,EAASI,KAAKvF,GAAGW,QAAQ6E,cAAcxF,GAAGM,WAAW+F,cAAe,CAClE1C,MAAOsB,EAAKtB,MACZ2C,QAASrE,EAAMN,WAAWR,GAC1BwE,SAAU,SAAUnC,GAClBtB,EAAaoB,EAAC,CAAC,EAAEnC,EAAMqC,IACvBL,EAAkBhC,EAAKqC,EACzB,KAOR,IAEO,CACLxD,GAAGW,QAAQ6E,cACTtF,EACA,KACAF,GAAGW,QAAQ6E,cACTjF,EACA,CACEiB,MAAOJ,EAAMI,MAAQ,YAAa+E,aAAa,GAEjDpB,IAGJnF,GAAGW,QAAQ6E,cACT,MACA,CACEgB,UAAWvE,EAAMuE,WAGnBxF,OAAOC,KAAKgC,GAAeY,KAAI,SAAC1C,GAAG,OACjCnB,GAAGW,QAAQ6E,cAAc,IAAK,CAAEiB,MAAO,CAAEZ,MAAO,QAAW5C,EAAc9B,GAAK,IAEhFnB,GAAGW,QAAQ6E,cACT,MACA,CACEkB,wBAAyB,CAAEC,OAAQhE,MAK7C,CACF,EACAiE,KAAM,SAAU3E,GAEd,OAAKA,EAAMN,WAAWE,QAGf,IACT,GAEJ,G","sources":["webpack://wp-extend/./src/index.js"],"sourcesContent":["const { registerBlockType } = wp.blocks;\nconst { InspectorControls } = wp.blockEditor || wp.editor;\nconst { PanelBody, TextControl, RangeControl } = wp.components;\nconst { useEffect, useState } = wp.element;\nconst { apiFetch } = wp;\n\nif (typeof wp !== 'undefined' && wp.blocks && wp.blockEditor && wp.components && wp.element && typeof ewp_blocks !== 'undefined') {\n  Object.keys(ewp_blocks).forEach((key) => {\n    const block = ewp_blocks[key];\n    const namespace = `${block.namespace}/${block.name}`;\n    registerBlockType(namespace, {\n      title: block.title,\n      icon: block.icon,\n      category: block.category,\n      attributes: {\n        ...block.attributes,\n        isValid: { type: 'boolean', default: true }, // Add a new attribute for validation state\n      },\n      edit: function (props) {\n        const { attributes, setAttributes, clientId } = props;\n\n        // Initialize inputValues with default or initial values from block.attributes\n        const initialValues = Object.keys(block.attributes).reduce((acc, attrKey) => {\n          const attribute = block.attributes[attrKey];\n          acc[attrKey] = attributes[attrKey] || attribute.default || '';\n          return acc;\n        }, {});\n\n        const [content, setContent] = useState('');\n        const [inputValues, setInputValues] = useState(initialValues);\n        const [errorMessages, setErrorMessages] = useState({});  // Track errors for this block instance\n\n        const handleInputChange = (identifier, newValue) => {\n          setInputValues({\n            ...inputValues,\n            [identifier]: newValue,\n          });\n\n          // Validate field upon change\n          validateField(identifier, newValue);\n        };\n\n        const validateField = (identifier, value) => {\n          if (block.attributes[identifier].required && !value) {\n            setErrorMessages((prevErrors) => ({\n              ...prevErrors,\n              [identifier]: `${block.attributes[identifier].label || identifier} is required.`\n            }));\n            setAttributes({ isValid: false }); // Mark block as invalid\n          } else {\n            // Clear the error for this field if it's valid\n            setErrorMessages((prevErrors) => {\n              const { [identifier]: _, ...rest } = prevErrors;  // Remove the error for this field\n              return rest;\n            });\n            setAttributes({ isValid: true }); // Mark block as valid\n          }\n        };\n\n        useEffect(() => {\n          // Fetch and set content logic\n          const queryParams = new URLSearchParams(inputValues).toString();\n          apiFetch({ path: `${block.namespace}/${block.name}/preview?${queryParams}` }).then((html) => {\n            setContent(html);\n            var data = { response: html, block: block };\n            const event = new CustomEvent(\"ewp_dynamic_block_on_change\", { detail: data });\n            document.dispatchEvent(event);\n          });\n        }, [JSON.stringify(inputValues)]);\n\n        // Check all required fields for this block instance\n        const validateRequiredFields = () => {\n          let hasErrors = false;\n          Object.entries(block.attributes).forEach(([key, data]) => {\n            if (data.required && !inputValues[key]) {\n              setErrorMessages((prevErrors) => ({\n                ...prevErrors,\n                [key]: `${data.label || key} is required.`\n              }));\n              hasErrors = true;\n            }\n          });\n\n          setAttributes({ isValid: !hasErrors });\n          return !hasErrors;  // Return the validation result\n        };\n\n        // Prevent block saving if this block instance is invalid\n        useEffect(() => {\n          validateRequiredFields();\n        }, [inputValues]); // Re-run validation when input values change\n\n        if (typeof block.attributes === 'object' && block.attributes !== null) {\n          var elements = [];\n          Object.entries(block.attributes).forEach(([key, data]) => {\n            switch (data.render_type) {\n              case 'select':\n                elements.push(wp.element.createElement(wp.components.SelectControl, {\n                  label: data.label,\n                  value: props.attributes[key],\n                  options: data.options,\n                  onChange: function (value) {\n                    setAttributes({ [key]: value });\n                    handleInputChange(key, value);\n                  }\n                }));\n                break;\n              case 'color':\n                elements.push(wp.element.createElement(wp.components.ColorPicker, {\n                  label: data.label,\n                  color: props.attributes[key],\n                  onChangeComplete: function (value) {\n                    const colorValue = value.hex;\n                    setAttributes({ [key]: colorValue });\n                    handleInputChange(key, colorValue);\n                  }\n                }));\n                break;\n              case 'textarea':\n                elements.push(wp.element.createElement(wp.components.TextareaControl, {\n                  label: data.label,\n                  value: props.attributes[key],\n                  onChange: function (value) {\n                    setAttributes({ [key]: value });\n                    handleInputChange(key, value);\n                  }\n                }));\n                break;\n              case 'number':\n                elements.push(wp.element.createElement(wp.components.RangeControl, {\n                  label: data.label,\n                  value: props.attributes[key],\n                  onChange: function (value) {\n                    setAttributes({ [key]: value });\n                    handleInputChange(key, value);\n                  },\n                  min: data.attributes.min || 0,\n                  max: data.attributes.max || 100,\n                  step: data.attributes.step || 1\n                }));\n                break;\n              case 'string':\n                elements.push(wp.element.createElement(wp.components.TextControl, {\n                  label: data.label,\n                  value: props.attributes[key],\n                  onChange: function (value) {\n                    setAttributes({ [key]: value });\n                    handleInputChange(key, value);\n                  }\n                }));\n                break;\n              case 'boolean':\n                elements.push(wp.element.createElement(wp.components.ToggleControl, {\n                  label: data.label,\n                  checked: props.attributes[key],\n                  onChange: function (value) {\n                    setAttributes({ [key]: value });\n                    handleInputChange(key, value);\n                  }\n                }));\n                break;\n              default:\n                // Handle other types\n                break;\n            }\n          });\n\n          return [\n            wp.element.createElement(\n              InspectorControls,\n              null,\n              wp.element.createElement(\n                PanelBody,\n                {\n                  title: block.title + ' Settings', initialOpen: true\n                },\n                elements\n              )\n            ),\n            wp.element.createElement(\n              'div',\n              {\n                className: props.className,\n              },\n              // Display individual error messages\n              Object.keys(errorMessages).map((key) => (\n                wp.element.createElement('p', { style: { color: 'red' } }, errorMessages[key])\n              )),\n              wp.element.createElement(\n                'div',\n                {\n                  dangerouslySetInnerHTML: { __html: content }\n                }\n              )\n            ),\n          ];\n        }\n      },\n      save: function (props) {\n        // Prevent save if the block instance is invalid\n        if (!props.attributes.isValid) {\n          return null;\n        }\n        return null; // Server-side rendering, so no save needed\n      },\n    });\n  });\n}"],"names":["registerBlockType","wp","blocks","InspectorControls","blockEditor","editor","_wp$components","components","PanelBody","_wp$element","TextControl","RangeControl","element","useEffect","useState","apiFetch","ewp_blocks","Object","keys","forEach","key","block","namespace","concat","name","title","icon","category","attributes","_objectSpread","isValid","type","default","edit","props","setAttributes","initialValues","clientId","reduce","acc","attrKey","attribute","_useState2","_slicedToArray","content","setContent","_useState4","inputValues","setInputValues","_useState6","errorMessages","setErrorMessages","handleInputChange","identifier","newValue","_defineProperty","validateField","value","required","prevErrors","label","_objectWithoutProperties","map","_toPropertyKey","queryParams","URLSearchParams","toString","path","then","html","event","CustomEvent","detail","response","document","dispatchEvent","JSON","stringify","hasErrors","entries","_ref2","_ref3","data","_typeof","elements","_ref4","_ref5","render_type","push","createElement","SelectControl","options","onChange","ColorPicker","color","onChangeComplete","colorValue","hex","TextareaControl","min","max","step","ToggleControl","checked","initialOpen","className","style","dangerouslySetInnerHTML","__html","save"],"sourceRoot":""}