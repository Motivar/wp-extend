{"version":3,"file":"index.js","mappings":"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","sources":["webpack://wp-extend/./src/index.js"],"sourcesContent":["const { registerBlockType } = wp.blocks;\nconst { InspectorControls } = wp.blockEditor || wp.editor;\nconst { PanelBody, TextControl, RangeControl } = wp.components;\nconst { useEffect, useState } = wp.element;\nconst { apiFetch } = wp;\n\nif (typeof wp !== 'undefined' && wp.blocks && wp.blockEditor && wp.components && wp.element && typeof ewp_blocks !== 'undefined') {\n Object.keys(ewp_blocks).forEach((key) => {\n  const block = ewp_blocks[key];\n  const namespace = `${block.namespace}/${block.name}`;\n  registerBlockType(namespace, {\n   title: block.title,\n   icon: block.icon,\n   category: block.category,\n   attributes: block.attributes,\n   edit: function (props) {\n    const { attributes, setAttributes } = props;\n    // Initialize inputValues with default or initial values from block.attributes\n    const initialValues = Object.keys(block.attributes).reduce((acc, attrKey) => {\n     const attribute = block.attributes[attrKey];\n     acc[attrKey] = attributes[attrKey] || attribute.default || '';\n     return acc;\n    }, {});\n\n\n    const [content, setContent] = useState('');\n    const [inputValues, setInputValues] = useState(initialValues);\n\n    const handleInputChange = (identifier, newValue) => {\n     setInputValues({\n      ...inputValues,\n      [identifier]: newValue,\n     });\n    };\n\n    useEffect(() => {\n     // Your existing logic to fetch and set content\n     const queryParams = new URLSearchParams(inputValues).toString();\n     apiFetch({ path: `${block.namespace}/${block.name}/preview?${queryParams}` }).then((html) => {\n      var data = JSON.parse(html.replace(/\\'/g, '\\\"'));\n      setContent(data);\n       var data = { response: data, block: block };\n       const event = new CustomEvent(\"ewp_dynamic_block_on_change\", { detail: data });\n       document.dispatchEvent(event);\n     });\n    }, [JSON.stringify(inputValues)]);\n\n    if (typeof block.attributes === 'object' && block.attributes !== null) {\n     var elements = [];\n     Object.entries(block.attributes).forEach(([key, data]) => {\n      // key is the attribute name\n      // value is the attribute value\n      // You can use a switch statement to handle different types\n\n      switch (data.render_type) {\n       case 'select':\n        elements.push(wp.element.createElement(wp.components.SelectControl, {\n         label: data.label,\n         value: props.attributes[key],\n         options: data.options,\n         onChange: function (value) {\n          setAttributes({ [key]: value });\n          handleInputChange(key, value)\n         }\n        }));\n        break;\n       case 'color':\n        elements.push(wp.element.createElement(wp.components.ColorPicker, {\n         label: data.label,\n         value: props.attributes[key],\n         onChangeComplete: function (value) { setAttributes({ [key]: value }); handleInputChange(key, value) }\n        }));\n        break;\n       case 'textarea':\n        elements.push(wp.element.createElement(wp.components.TextareaControl, {\n         label: data.label,\n         value: props.attributes[key],\n         onChange: function (value) { setAttributes({ [key]: value }); handleInputChange(key, value) }\n        }));\n        break;\n       case 'number':\n        elements.push(wp.element.createElement(wp.components.RangeControl, {\n         label: data.label,\n         value: props.attributes[key],\n         onChange: function (value) { setAttributes({ [key]: value }); handleInputChange(key, value) },\n         min: data.attributes.min || 0,\n         max: data.attributes.max || 100,\n         step: data.attributes.step || 1\n        }));\n        break;\n       case 'string':\n        elements.push(wp.element.createElement(wp.components.TextControl, {\n         label: data.label,\n         value: props.attributes[key],\n         onChange: function (value) { setAttributes({ [key]: value }); handleInputChange(key, value) }\n        }));\n        break;\n       case 'boolean':\n        elements.push(wp.element.createElement(wp.components.ToggleControl, {\n         label: data.label,\n         checked: props.attributes[key],\n         onChange: function (value) { setAttributes({ [key]: value }); handleInputChange(key, value) }\n        }));\n        break;\n       default:\n        // Handle other types\n        break;\n      }\n     });\n     return [\n      wp.element.createElement(\n       InspectorControls,\n       null,\n       wp.element.createElement(\n        PanelBody,\n        {\n         title: block.title + ' Settings', initialOpen: true\n        },\n        elements\n       )\n      ),\n      wp.element.createElement(\n       'div',\n       {\n        className: props.className,\n        dangerouslySetInnerHTML: { __html: content }\n       }\n      ),\n     ];\n    }\n   },\n   save: function () {\n    return null;\n   },\n  });\n });\n}"],"names":["registerBlockType","wp","blocks","InspectorControls","blockEditor","editor","_wp$components","components","PanelBody","_wp$element","TextControl","RangeControl","element","useEffect","useState","apiFetch","ewp_blocks","Object","keys","forEach","key","block","namespace","concat","name","title","icon","category","attributes","edit","props","setAttributes","initialValues","reduce","acc","attrKey","attribute","_useState2","_slicedToArray","content","setContent","_useState4","inputValues","setInputValues","handleInputChange","identifier","newValue","_objectSpread","_defineProperty","queryParams","URLSearchParams","toString","path","then","html","data","JSON","parse","replace","response","event","CustomEvent","detail","document","dispatchEvent","stringify","_typeof","elements","entries","_ref2","_ref3","render_type","push","createElement","SelectControl","label","value","options","onChange","ColorPicker","onChangeComplete","TextareaControl","min","max","step","ToggleControl","checked","initialOpen","className","dangerouslySetInnerHTML","__html","save"],"sourceRoot":""}