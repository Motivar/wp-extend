stages:
  - update_wiki

update_wiki:
  stage: update_wiki
  image: debian:latest
  tags:
    - docker
  script:
    # Install necessary tools
    - apt-get update && apt-get install -y git openssh-client bash
    - git config --global user.name "Nikos Giannopoulos"
    - git config --global user.email "gnnpls.nikos@gmail.com"
    # Start SSH agent
    - eval $(ssh-agent -s)
    - echo "$GITLAB_UPDATE_SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - ssh-keyscan gitlab.motivar.io >> ~/.ssh/known_hosts

    # Clone the GitLab Wiki repository
    - git clone git@gitlab.motivar.io:plugins/extend-wp/wp-extend.wiki.git

    # Ensure the wiki directory exists
    - if [ ! -d "wp-extend.wiki" ]; then
        echo "Wiki directory does not exist. Exiting.";
        exit 1;
      fi

    # Remove existing wiki files to avoid duplication
    - rm -rf wp-extend.wiki/*

    # Find and process README.md files in the parent plugin folder
    - |
      files=$(find .. -type f -name "README.md")
      if [ -z "$files" ]; then
        echo "No README.md files found in the parent folder. Exiting."
        exit 0
      fi
      for file in $files; do
        echo "Processing file: $file"

        # Extract the header from the README.md file
        header=$(grep -m 1 "^# " "$file" | sed 's/^# //')

        # Generate a filename based on the header and sanitize it
        sanitized_header=$(echo "$header" | tr ' ' '_' | tr '[:upper:]' '[:lower:]' | tr -cd '[:alnum:]_').md

        # If the header is empty, use a default filename based on the original file path
        if [ -z "$sanitized_header" ]; then
          sanitized_header=$(basename "$file" .md).md
        fi

        # Copy the README.md file to the wiki root with the generated filename
        cp "$file" "./wp-extend.wiki/$sanitized_header"
        echo "Copied $file to ./wp-extend.wiki/$sanitized_header"
      done

    # Navigate to the wiki directory and push changes
    - cd wp-extend.wiki
    - git add .
    - |
      if ! git diff --quiet HEAD; then
        COMMIT_MSG="Update wiki pages from README.md files $(date +'%Y-%m-%d')"
        echo "$COMMIT_MSG"
        git commit -m "$COMMIT_MSG"
        git push
      else
        echo "No changes to the wiki, skipping commit and push."
      fi
    - echo "Wiki update process completed successfully."